[[language]]
name = "python"
scope = "source.python"
injection-regex = "python"
file-types = ["py", "pyi", "pyc", "pyd", "pyw"]
shebangs = ["python"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["basedpyright", "ruff"]
formatter = { command = "ruff", args = ["format", "-"] }
auto-format = true

[language-server.basedpyright]
command = "basedpyright"

[language-server.basedpyright.config]
analysis = { typeCheckingMode = "basic", diagnosticMode = "openFilesOnly", useLibraryCodeForTypes = true, reportMissingImports = true, reportUndefinedVariable = true }

[language-server.ruff]
command = "ruff-lsp"

[[language]]
name = "html"
formatter = { command = "prettier", args = ["--parser", "html"] }

[[language]]
name = "json"
formatter = { command = "prettier", args = ["--parser", "json"] }

[[language]]
name = "css"
formatter = { command = "prettier", args = ["--parser", "css"] }

[[language]]
name = "javascript"
formatter = { command = "prettier", args = ["--parser", "javascript"] }
auto-format = true

[[language]]
name = "typescript"
formatter = { command = "prettier", args = ["--parser", "typescript"] }
auto-format = true

[[language]]
name = "lua"
language-servers = ["lua-language-server"]
formatter = { command = "stylua" }
auto-format = true

[language-server.lua-language-server]
command = "lua-language-server"

[language-server.lua-language-server.config]
runtime = { version = "LuaJIT" }
diagnostics = { globals = ["vim"] }
workspace = { library = [
  "/path/to/neovim/runtime",
], checkThirdParty = false, maxPreload = 100, preloadFileSize = 1000 }
telemetry = { enable = false }
completion = { callSnippet = "Replace" }

[[language]]
name = "toml"
formatter = { command = "taplo", args = ["format", "-"] }

[[language]]
name = "bash"
formatter = { command = "shfmt", args = ["-i", "2", "-ci"] }

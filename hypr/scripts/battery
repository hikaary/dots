#!/usr/bin/python
import subprocess
import time

import psutil

CRITICAL_BATTERY_LEVEL = 10
LOW_BATTERY_LEVEL = 20


def get_battery_status():
    battery = psutil.sensors_battery()
    return battery.percent, battery.power_plugged


def send_notification(message, urgency="normal"):
    subprocess.run(["dunstify", "-u", urgency, "Статус батареи", message])


def check_battery_level(percent, is_plugged, last_notification):
    if is_plugged:
        return

    if percent <= CRITICAL_BATTERY_LEVEL and last_notification != "critical":
        return (
            "Критически низкий заряд батареи (10%)! Подключите зарядное устройство немедленно!",
            "critical",
        )
    elif percent <= LOW_BATTERY_LEVEL and last_notification != "low":
        return (f"Низкий заряд батареи ({LOW_BATTERY_LEVEL}%)", "normal")


def main():
    last_plugged_status = None
    last_notification = None

    while True:
        percent, is_plugged = get_battery_status()

        # Проверка изменения статуса подключения
        if is_plugged != last_plugged_status:
            message = (
                "Зарядное устройство подключено"
                if is_plugged
                else "Зарядное устройство отключено"
            )
            send_notification(message)
            last_plugged_status = is_plugged
            last_notification = None  # Сброс последнего уведомления о батарее

        # Проверка уровня батареи
        notification = check_battery_level(percent, is_plugged, last_notification)
        if notification:
            message, urgency = notification
            send_notification(message, urgency)
            last_notification = "critical" if urgency == "critical" else "low"

        time.sleep(60)  # Проверка каждую минуту


if __name__ == "__main__":
    main()
